name: Build and Release

on:
  push:
    tags:
      - '*'
  create:
    tags:
      - '*'

permissions:
  contents: write
  id-token: write

jobs:
  changelog:
    name: Generate Changelog
    runs-on: ubuntu-latest
    outputs:
      changelog_path: ${{ steps.extract.outputs.changelog_content }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install uv and git-cliff
        run: |
          uv add --dev git-cliff

      - name: Generate CHANGELOG.md
        run: |
          uv run git-cliff --tag ${GITHUB_REF#refs/tags/} --output CHANGELOG.md

      - name: Extract release notes
        id: extract
        run: |
          version=${GITHUB_REF#refs/tags/}
          sed -n "/## \[${version#v}\]/,/## \[/p" CHANGELOG.md | sed '$d' > release_notes.md
          echo "::set-output name=changelog_content::$(cat release_notes.md)"

  build-macos:
    name: Build macOS Executable
    runs-on: macos-latest
    needs: changelog
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v6
        with:
          version: "latest"
          enable-cache: true

      - name: Set up Python
        run: uv python install 3.12

      - name: Install dependencies and build macOS executable
        run: |
          uv sync --all-groups
          uv add --group dev pyinstaller
          uv run pyinstaller --onefile --name pyliz-${{ github.ref_name }}-macos pylizlib/core/cli.py
          if [ -f "pylizlib/qt/cli.py" ]; then
            uv run pyinstaller --onefile --name qtliz-${{ github.ref_name }}-macos pylizlib/qt/cli.py
          fi

  build-linux:
    name: Build Linux Executable
    runs-on: ubuntu-latest
    needs: changelog
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v6
        with:
          version: "latest"
          enable-cache: true

      - name: Set up Python
        run: uv python install 3.12

      - name: Install dependencies and build Linux executables
        run: |
          uv sync --all-groups
          uv add --group dev pyinstaller
          uv run pyinstaller --onefile --name pyliz-${{ github.ref_name }}-linux pylizlib/core/cli.py
          mv dist/pyliz-${{ github.ref_name }}-linux dist/pyliz-${{ github.ref_name }}-linux
          if [ -f "pylizlib/qt/cli.py" ]; then
            uv run pyinstaller --onefile --name qtliz-${{ github.ref_name }}-linux pylizlib/qt/cli.py
          fi

  build-windows:
    name: Build Windows Executable
    runs-on: windows-latest
    needs: changelog
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v6
        with:
          version: "latest"
          enable-cache: true

      - name: Set up Python
        run: uv python install 3.12

      - name: Install dependencies and build Windows executable
        run: |
          uv sync --all-groups
          uv add --group dev pyinstaller
          uv run pyinstaller --onefile --name pyliz-${{ github.ref_name }}-windows.exe pylizlib/core/cli.py

  release:
    name: Create GitHub Release & Publish
    runs-on: ubuntu-latest
    needs:
      - build-macos
      - build-linux
      - build-windows
    environment: pypi
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Publish to PyPI
        run: uv publish
        env:
          UV_PUBLISH_TOKEN: ${{ secrets.PYPI_API_TOKEN }}

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          name: Release ${{ github.ref_name }}
          body: ${{ needs.changelog.outputs.changelog_path }}
          files: |
            dist/pyliz-*-macos
            dist/qtliz-*-macos
            dist/pyliz-*-linux
            dist/qtliz-*-linux
            dist/pyliz-*-windows.exe
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
